{
	"$schema": "http://json-schema.org/draft-04/schema#",
	"id": "http://iec.ch/TC57/GeoObjectSchema#",
	"type": "object",
	"properties":
	{
		"GeoObjectSchema":
		{
			"type": "object",
			"allOf":
			[
				{
					 "$ref": "#/definitions/GeoObject",
					 "minItems": 0
				}
			]
		}
	},
	"definitions":
	{
		"GeoObject" : 
		{
			"type": "object",
			"properties":
			{
				"attitude":
				{
					"description" : "the kind of expected behavior of the GeoObject (e.g friendly, hostile, unknown). Please see API documentation for a list of valid entries.",
					"type" : "str",
					"minItems" : 1,
					"maxItems" : 1
				},
				"geoObject":
				{
					"description" : "a GeoObject is the information that will determine which type will be placed on the tak maps including his icon. Please see API documentation for a list of valid entries.",
					"type" : "str",
					"minItems" : 1,
					"maxItems" : 1
				},
				"how":
				{
					"description" : "the way in which this geo information has been acquired. Please see API documentation for a list of valid entries.",
					"type" : "str",
					"minItems" : 1,
					"maxItems" : 1
				},
				"latitude":
				{
					"description" : "the angular distance of the geoobject from the earths equator expressed in positive or negative float. (e.g 43.855682)",
					"type" : "number",
					"minItems" : 1,
					"maxItems" : 1
				},
				"longitude":
				{
					"description" : "the angular distance of the geoobject from the meridian of the greenwich, UK expressed in positive or negative float. (e.g -76.107.7998)",
					"type" : "number",
					"minItems" : 1,
					"maxItems" : 1
				}
			}
		}
	}
}


class GeoObject:
# default constructor  def __init__(self):  

    # the kind of expected behavior of the GeoObject (e.g friendly, hostile, unknown).
    # Please see API documentation for a list of valid entries.
    attitude = "" 
    # a GeoObject is the information that will determine which type will be placed on
    # the tak maps including his icon. Please see API documentation for a list of
    # valid entries.
    geoObject = "" 
    # the way in which this geo information has been acquired. Please see API
    # documentation for a list of valid entries.
    how = "" 
    # the angular distance of the geoobject from the earths equator expressed in
    # positive or negative float. (e.g 43.855682)
    latitude = "" 
    # the angular distance of the geoobject from the meridian of the greenwich, UK
    # expressed in positive or negative float. (e.g -76.107.7998)
    longitude = "" 