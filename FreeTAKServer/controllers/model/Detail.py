#######################################################
#
# detail.py
# Python implementation of the Class detail
# Generated by Enterprise Architect
# Created on: 11-Feb-2020 11:08:07 AM
# Original author: Corvo
#
#######################################################
from .Takv import Takv
from .Uid import Uid
from .Precisionlocation import Precisionlocation
from .Group import Group
from .Status import Status
from .Track import Track
from .Marti import Marti
from .Link import Link
from .Contact import Contact
from .Emergency import Emergency
from .Chat import Chat

class Detail:
    """An optional element used to hold CoT sub-schema. empty element
    """
    def __init__(self, CoTType):
        function = getattr(self, CoTType)
        function()

    @classmethod
    def Ping(self):
        pass

    @classmethod
    def Connection(cls, xml):
        cls.m_Takv = Takv(xml.find('takv'))
        cls.m_Contact = Contact(xml.find('contact'))
        cls.m_Uid = Uid(xml.find('uid'))
        cls.m_precisionlocation = Precisionlocation(xml.find('precisionlocation'))
        cls.m_Group = Group(xml.find('__group'))
        cls.m_Status = Status(xml.find('status'))
        cls.m_Track = Track(xml.find('track'))
        return cls

    @classmethod
    def EmergencyOn(cls, xml):
        cls.m_Link = Link(xml.find('link'))
        cls.m_Contact = Contact(xml.find('contact'))
        cls.m_Emergency = Emergency(xml.find('emergency'))
        return cls

    @classmethod
    def EmergencyOff(cls, xml):
        cls.m_Emergency = Emergency(xml.find('emergency'))
        return cls

    @classmethod
    def Other(cls, xml):
        cls.Marti = Marti(xml.find('marti'))
        return cls

    @classmethod
    def GeoChat(cls, xml):
        cls.m_Chat
